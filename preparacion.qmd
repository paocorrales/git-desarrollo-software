---
title: "Lo que necesitas hacer antes del curso"
---

Por favor sigue estas instrucciones para asegurarte que tienes todo lo necesario para el curso.

Posiblemente tengas instalada algunas de las herramientas, si hace mucho que no las usas, asegurate de actualizarlas.

## Instalá R y RStudio {.unnumbered}

Vamos a utilizar R (lenguaje de programación) y RStudio como IDE (Integrated Development Environment).
Si no los tenés instalados, por favor [seguí las instrucciones en esta página de Posit (en Ingles) para hacerlo.](https://posit.co/download/rstudio-desktop/)

## Instalá Git {.unnumbered}

Git es una herramienta para control de versiones, vamos a utilizarla para trabajar colaborativamente.

En la pagina de [Git](https://git-scm.com/downloads) podrás descargar el instalador para tu sistema operativo.

En esa misma pagina [hay una guia de instalacion para cada sistema operativo en castellano](https://git-scm.com/book/es/v2/Inicio---Sobre-el-Control-de-Versiones-Instalación-de-Git).

## Creá una cuenta en GitHub {.unnumbered}

GitHub es una de las interfaces y repositorios mundiales mas conocidos y utilizados por quienes desarrollan software.
Vamos a utilizarlo para publicar nuestro código.

-   Entrá a <https://github.com/>.

-   Hace click en *Registrarse* or *Sign up*.

-   Seguí las indicaciones para crear la cuenta personal.

-   Uno de los pasos implica chequear que sos una persona y luego validar la direccion de email que usaste para crear la cuenta.

## Configuración de Git y GitHub {.unnumbered}

Ahora que ya tenés git instalado y una cuenta en GitHub, es importante completar la configuración necesaria para que puedas trabajar.
Hay varias maneras de hacerlo, en este caso lo haremos desde R usando el paquete [*usethis*](https://usethis.r-lib.org) *y [gitcreds](https://cran.r-project.org/web/packages/gitcreds/index.html)*.

1.  Abrí RStudio e instalá *usethis* corriendo el siguiente código en la **consola**:

``` r
install.packages("usethis")
```

2.  Configurá tu nombre y correo electrónico:

``` r
usethis::use_git_config(user.name = "Juan Perez",
               user.email = "juan@ejemplo.org")
```

Sustituyéndolo por tu nombre y el correo electrónico asociado a tu cuenta de GitHub.
git usará esta información para registrar quien hizo cambios en un archivo.
Veremos esto durante los talleres de git y Github, desarrollo de paquetes y revision de código.

3.  Configurá tu PAT

El PAT o "personal access token", mejor conocido como token es una especie de contraseña que deberás setear en tu computadora para poder hacer cambios en GitHub.

Primero tendrás que crear el token:

``` r
usethis::create_github_token()
```

Se abrirá la ventana de GitHub y ahí tendrás que seguir los pasos para crear el token y copiarlo (muy importante!).
Por las dudas **no cierres esta ventana**.

Ahora corré el siguiente código para setear el token en tu computadora:

``` r
gitcreds::gitcreds_set()
```

Elegí crear/guardar el token.
Si tenés Ubuntu esto no termina acá, tendrás que seguir los pasos en [esta guia](https://blog.djnavarro.net/posts/2021-08-08_git-credential-helpers/) para guardar el token de manera permanente.

4.  *Vacuná* tu instalación de git:

``` r
usethis::git_vaccinate() 
```

Esta función agrega algunos archivos y configuraciones que se consideran buenas prácticas.
Vamos a ver mas detalle durante el taller de desarrollo de paquetes.
También podés leer la documentación de la función para aprender más.

5.  Chequeá que todo esté en orden:

``` r
usethis::git_sitrep() 
```

Esta función devuelve el estado de situación de tu configuración de git y GitHub.
Revisá que aparezca tu nombre y mail, que aparezca `Vaccinated: TRUE` y que `Personal access token for "https://github.com": <discovered>` esté tal cual ese mensaje.
