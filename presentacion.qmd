---
title: "Desarrollando Software en Comunidad"
format: 
  revealjs:
    theme: default
    self-contained: true
    fontsize: "18.5pt"
---

# Hola!  Les damos la bienvenida


------------------------------------------------------------------------

## Sobre este taller

::: columns
::: {.column width="40%"}
- Por qué usar git
- Cómo usar git (y GitHub)
- Cómo trabajar con git en el contexto de escribir código R
- Cómo colaborar con otras personas.
:::

::: {.column width="60%"}
```{r}
#| echo: false
#| fig-alt: "Ilustración de Alison Horst que muestra el directorio de trabajo (como un edificio), cómo se añaden los archivos al área de preparación (staging) y se envían al repositorio local (otro edificio). Los envíos se transfieren y se extraen del repositorio remoto (un edificio diferente), todos conectados con flechas."

knitr::include_graphics("https://cdn.myportfolio.com/45214904-6a61-4e23-98d6-b140f8654a40/68739659-fb6f-41e8-9813-32e1de3d82c0_rw_1920.png?h=4b046efe7664ab833358c241b10bd8e6")
```
:::
:::


------------------------------------------------------------------------

## Cómo usar Git

Elije tu propia aventura:

::: columns
::: {.column width="50%"}
Git desde Rstudio

```{r}
#| echo: false
#| fig-alt: "Captura de pantalla del IDE RStudio para git. Muestra dos archivos añadidos al área de staging y el espacio para escribir el mensaje de commit."

knitr::include_graphics("images/add3.png")
```
:::

::: {.column width="50%"}
Git desde la consola

```{r}
#| echo: false
#| fig-alt: "Captura de pantalla con la consola y el paquete usethis en uso."

knitr::include_graphics("images/consola.png")
```
:::
:::

------------------------------------------------------------------------

Tienen algo asi en su computadora?

```         
/home/pao/Documents/thesis
├── resumen.R
├── tesis.Rmd
├── tesis_revisada.Rmd
├── tesis_revisada2.Rmd
├── tesis_final.Rmd
├── tesis_finalfinal.Rmd
├── esta_es_la_final.Rmd
├── ahora_si_esta_es_la_final_en_serio_definitivo.Rmd
└── FINAL.Rmd
```

------------------------------------------------------------------------

## Ciclo del control decversiones

![La figura muestra los estados de un archivo: sin rastrear o rastreado. Cuando es rastreado por el repositorio, el archivo puede ser preparado, confirmado o modificado. Con la acción «add, añadir», el archivo se «prepara, staged», y con la acción «commit, confirmar», el archivo se «guarda» en el repositorio. Este ciclo se repite cada vez que se modifica el archivo.](images/file_cycle2.png)

------------------------------------------------------------------------

## Nuestro flujo de trabajo

![Modelo conceptual de un flujo de trabajo utilizando proyectos de RStudio y git. Los archivos se añaden al área de preparación y a continuación se envían al repositorio local. Puede enviar los cambios al repositorio remoto y descargar los nuevos cambios a su ordenador.](images/local_remote.png)

## Chequear que todo esta listo

``` r
> usethis::git_sitrep()

── Git global (user) 
• Name: "Pao Corrales"
• Email: "micorreo@gmail.com"
• Global (user-level) gitignore file: ~/.gitignore
• Vaccinated: TRUE
• Default Git protocol: "https"
• Default initial branch name: "main"

── GitHub user 
• Default GitHub host: "https://github.com"
• Personal access token for "https://github.com": <discovered>
• GitHub user: "paocorrales"
• Token scopes: "gist", "repo", "user", and "workflow"
• Email(s): "micorreo@gmail.com (primary)", "paocorrales@users.noreply.github.com", and
  "otro correo@gmail.com"
ℹ No active usethis project.
```

## Presentate a git

``` r
library(usethis) 
use_git_config(user.name = "Juana Perez",  # Tu nombre
               user.email = "juana@example.org")  # Tu email (el que usaste en GitHub)
```

## Crea un repositorio online

1. Entrá en [github.com](https://github.com) e inicia sesión.
2. En la esquina superior derecha, hacé click en el botón "+" y luego en "New repository".

A continuación completá la información del repositorio:

-   Repository template: No template.
-   Repository name: como quieras llamar a tu nuevo proyecto.
-   Description: Una descripción breve del proyecto. Escribila para que lo entiendas las personas.
-   Visibilidad: Public.
-   Initialize this repository with: nada (podemos configurarlo todo desde R).

Antes de volver a RStudio, copia la url del repositorio. Por ejemplo `https://github.com/paocorrales/myrepo.git`

Ya tenés tu repositorio online!

## Clonar el repositorio de forma local usando RStudio.

1.  En RStudio inicia un nuevo proyecto: File \> New Project \> Version Control \> Git. 
2. En la "URL del repositorio" pegá la URL de tu nuevo repositorio de GitHub, tiene que tener esta pinta: `https://github.com/paocorrales/myrepo.git`.
3.  Elejí la carpeta en tu disco donde querés crear el proyecto.
4.  Selecciona "Open in new session".
5.  Y hacé clic en "Create Project".

## Confirmar cambios locales

1.  Creá un nuevo archivo RMarkdown y guardalo.
2.  Agregalo al área de preparación con *add* y luego hace un *commit*. ¡Vas a tener que pensar un mensaje descriptivo!
3.  Hace un cambio en el archivo, puede ser cualquier cosa. Guardalo.
4.  Repetí el paso 2.


## Haciendo cambios remotos

1.  On the main repository page, click on the green bottom that says "Add a README".
2.  Add something to the file. READMEs usually are written in Markdown and contain information about the repo.
3.  At the end of the page add a message on the first line and click on "Commit changes...".
4.  Come back to the main page to see the README.

## Getting remote changes

1.  Go back to RStudio.
2.  To the the Git pane.
3.  Click on the light blue arrow that says "Pull".
4.  Check the README file on the Files tab.

------------------------------------------------------------------------

## Working with others

![Concep model of the remote workflow. A foreign remote repository can be forked to an owned remote repository with a "fork". The remote repository is copied into a local repository with a "clone". Files inside the local repository and the remote repository are synced with push and pull. The owned remote repository can be merged into the foreign remote repository with a pull request.](images/pull-request.png)

## Planting trees

### Fork the repository

1.  Go to [github.com/paocorrales/flametree_gallery](https://github.com/paocorrales/flametree_gallery)
2.  Fork the repository using the "Fork" button on the top right corner.

Now, you have a copy of the repo in your GitHub account.

3.  Copy the url of the repo and clone it to your computer

## Planting trees

### Make a change in the repo

1.  Make a copy of the `template_script.R` file and change it's name to `<your-name.R>`

2.  Change the value of the first 3 variables in the script:

    -   `name` your name.
    -   `seed` there are some random things happening there.
    -   `shades` choose 4 colors that you like.

You can run the code if you want :)

3.  Save the file, **add** it to the staging area and **commit** it (*include only the .R file you created*).
4.  Push it to your remote repository.

## Planting trees

### Make a pull request

1.  Go to your repo in GitHub, you will see that you made the last commit and a message like this:

![](images/pr1.png){fig-align="center" width="783"}

2.  Click on "Open pull request".
3.  And click on "Create pull request".
4.  We are almost there. Complete the pull request with a title and a message and then finish the PR.

And that's it!